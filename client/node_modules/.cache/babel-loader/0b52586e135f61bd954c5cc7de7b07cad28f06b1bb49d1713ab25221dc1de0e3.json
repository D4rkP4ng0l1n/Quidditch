{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clemr\\\\Downloads\\\\Stage\\\\Semaine_2\\\\Mardi\\\\Quidditch\\\\client\\\\src\\\\components\\\\TableauStatistiques.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableauStatistiques = () => {\n  _s();\n  const [joueurs, setJoueurs] = useState([]);\n  const [nbMatchs, setNbMatchs] = useState([]);\n  const [nbSelections, setNbSelections] = useState({});\n  useEffect(() => {\n    // Fonction qui récupère le nombre de sélections pour un joueur donné\n    const fetchNbSelections = async joueur => {\n      const response = await axios.get('http://localhost:5000/participation/joueur/' + joueur._id);\n      const participations = response.data.participation;\n      let nbSelectionTitulaire = 0;\n      let nbSelectionRemplacant = 0;\n      let evaluations = 0;\n      let nbEvaluations = 0;\n      let nbMatchWin = 0;\n\n      // Parcours de toutes les participations du joueur\n      participations.forEach(participation => {\n        const match = axios.get('http://localhost:5000/match/' + participation.idMatch).then(response => {\n          const data = response.data.match;\n          if (data.score > data.scoreAdverse) {\n            nbMatchWin++;\n          }\n        });\n        if (participation.poste === 'titulaire') {\n          nbSelectionTitulaire += 1;\n        } else {\n          nbSelectionRemplacant += 1;\n        }\n        evaluations += participation.note;\n        nbEvaluations++;\n      });\n      const moyEval = evaluations / nbEvaluations;\n\n      // Retourne un objet contenant les nombre de sélections\n      return {\n        nbSelectionTitulaire,\n        nbSelectionRemplacant,\n        moyEval\n      };\n    };\n\n    // Fonction pour récupérer les données de tous les joueurs en parallèle\n    const fetchData = async () => {\n      try {\n        const [joueurResponse, matchResponse] = await Promise.all([axios.get('http://localhost:5000/joueur/'), axios.get('http://localhost:5000/match/')]);\n        const joueurs = joueurResponse.data.joueur;\n        const nbMatchs = matchResponse.data.match.length;\n\n        // Parcours de tous les joueurs pour récupérer leur nombre de sélections\n        const nbSelectionsPromises = joueurs.map(joueur => fetchNbSelections(joueur));\n        const nbSelections = await Promise.all(nbSelectionsPromises);\n\n        // Mise à jour des states\n        setJoueurs(joueurs);\n        setNbMatchs(nbMatchs);\n        const newNbSelections = {};\n        joueurs.forEach((joueur, index) => {\n          newNbSelections[joueur._id] = nbSelections[index];\n        });\n        setNbSelections(newNbSelections);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Joueur \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Statut \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Poste pr\\xE9f\\xE9r\\xE9 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Nombre total de s\\xE9lection en tant que titulaire \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Nombre total de s\\xE9lection en tant que rempla\\xE7ant \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Moyenne des \\xE9valuations \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Pourcentage de matchs gagn\\xE9s \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: joueurs.map(joueur => {\n          var _nbSelections$joueur$, _nbSelections$joueur$2, _nbSelections$joueur$3;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", joueur.nom, \" \", joueur.prenom, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", joueur.statut, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", joueur.postePref, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", ((_nbSelections$joueur$ = nbSelections[joueur._id]) === null || _nbSelections$joueur$ === void 0 ? void 0 : _nbSelections$joueur$.nbSelectionTitulaire) || 0, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", ((_nbSelections$joueur$2 = nbSelections[joueur._id]) === null || _nbSelections$joueur$2 === void 0 ? void 0 : _nbSelections$joueur$2.nbSelectionRemplacant) || 0, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", ((_nbSelections$joueur$3 = nbSelections[joueur._id]) === null || _nbSelections$joueur$3 === void 0 ? void 0 : _nbSelections$joueur$3.moyEval) || '/', \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)]\n          }, joueur._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(TableauStatistiques, \"SEBzF1D86npe3huzQTLxEXZ0jtc=\");\n_c = TableauStatistiques;\nexport default TableauStatistiques;\nvar _c;\n$RefreshReg$(_c, \"TableauStatistiques\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TableauStatistiques","_s","joueurs","setJoueurs","nbMatchs","setNbMatchs","nbSelections","setNbSelections","fetchNbSelections","joueur","response","get","_id","participations","data","participation","nbSelectionTitulaire","nbSelectionRemplacant","evaluations","nbEvaluations","nbMatchWin","forEach","match","idMatch","then","score","scoreAdverse","poste","note","moyEval","fetchData","joueurResponse","matchResponse","Promise","all","length","nbSelectionsPromises","map","newNbSelections","index","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_nbSelections$joueur$","_nbSelections$joueur$2","_nbSelections$joueur$3","nom","prenom","statut","postePref","_c","$RefreshReg$"],"sources":["C:/Users/clemr/Downloads/Stage/Semaine_2/Mardi/Quidditch/client/src/components/TableauStatistiques.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TableauStatistiques = () => {\r\n\r\n    const [joueurs, setJoueurs] = useState([]);\r\n    const [nbMatchs, setNbMatchs] = useState([]);\r\n    const [nbSelections, setNbSelections] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        // Fonction qui récupère le nombre de sélections pour un joueur donné\r\n        const fetchNbSelections = async (joueur) => {\r\n            const response = await axios.get('http://localhost:5000/participation/joueur/' + joueur._id);\r\n\r\n            const participations = response.data.participation;\r\n\r\n            let nbSelectionTitulaire = 0;\r\n            let nbSelectionRemplacant = 0;\r\n\r\n            let evaluations = 0;\r\n            let nbEvaluations = 0;\r\n\r\n            let nbMatchWin = 0;\r\n\r\n            // Parcours de toutes les participations du joueur\r\n            participations.forEach((participation) => {\r\n                const match = axios.get('http://localhost:5000/match/' + participation.idMatch)\r\n                    .then((response) => {\r\n                        const data = response.data.match;\r\n                        if (data.score > data.scoreAdverse) {\r\n                            nbMatchWin++;\r\n                        }\r\n                    });\r\n                if (participation.poste === 'titulaire') {\r\n                    nbSelectionTitulaire += 1;\r\n                } else {\r\n                    nbSelectionRemplacant += 1;\r\n                }\r\n                evaluations += participation.note;\r\n                nbEvaluations++;\r\n            });\r\n\r\n            const moyEval = evaluations / nbEvaluations;\r\n\r\n            // Retourne un objet contenant les nombre de sélections\r\n            return {\r\n                nbSelectionTitulaire,\r\n                nbSelectionRemplacant,\r\n                moyEval\r\n            };\r\n        };\r\n\r\n        // Fonction pour récupérer les données de tous les joueurs en parallèle\r\n        const fetchData = async () => {\r\n            try {\r\n                const [joueurResponse, matchResponse] = await Promise.all([\r\n                    axios.get('http://localhost:5000/joueur/'),\r\n                    axios.get('http://localhost:5000/match/'),\r\n                ]);\r\n\r\n                const joueurs = joueurResponse.data.joueur;\r\n                const nbMatchs = matchResponse.data.match.length;\r\n\r\n                // Parcours de tous les joueurs pour récupérer leur nombre de sélections\r\n                const nbSelectionsPromises = joueurs.map((joueur) => fetchNbSelections(joueur));\r\n                const nbSelections = await Promise.all(nbSelectionsPromises);\r\n\r\n                // Mise à jour des states\r\n                setJoueurs(joueurs);\r\n                setNbMatchs(nbMatchs);\r\n\r\n                const newNbSelections = {};\r\n                joueurs.forEach((joueur, index) => {\r\n                    newNbSelections[joueur._id] = nbSelections[index];\r\n                });\r\n                setNbSelections(newNbSelections);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <section>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th> Joueur </th>\r\n                        <th> Statut </th>\r\n                        <th> Poste préféré </th>\r\n                        <th> Nombre total de sélection en tant que titulaire </th>\r\n                        <th> Nombre total de sélection en tant que remplaçant </th>\r\n                        <th> Moyenne des évaluations </th>\r\n                        <th> Pourcentage de matchs gagnés </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {joueurs.map(joueur => (\r\n                        <tr key={joueur._id}>\r\n                            <td> {joueur.nom} {joueur.prenom} </td>\r\n                            <td> {joueur.statut} </td>\r\n                            <td> {joueur.postePref} </td>\r\n                            <td> {nbSelections[joueur._id]?.nbSelectionTitulaire || 0} </td>\r\n                            <td> {nbSelections[joueur._id]?.nbSelectionRemplacant || 0} </td>\r\n                            <td> {nbSelections[joueur._id]?.moyEval || '/'} </td>\r\n                            <td> </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default TableauStatistiques;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}