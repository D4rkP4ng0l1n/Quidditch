{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jules\\\\Documents\\\\Stage\\\\Projet Quidditch\\\\Quidditch\\\\client\\\\src\\\\components\\\\FormLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormLogin = () => {\n  _s();\n  const utilisateurs = [{\n    login: \"Shrek\",\n    mdp: \"ratio\"\n  }];\n  const [identifiant, setIdentifiant] = useState('');\n  const [motDePasse, setMotDePasse] = useState('');\n  const [messageErreur, setMessageErreur] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    const utilisateurTrouve = utilisateurs.find(utilisateur => utilisateur.login === identifiant && utilisateur.mdp === motDePasse);\n    if (utilisateurTrouve) {\n      setMessageErreur('');\n    } else {\n      setMessageErreur('Identifiant ou mot de passe incorrect.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"authentification\",\n    onSubmit: handleSubmit,\n    children: [\"Identifiant \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"formInput\",\n      value: identifiant,\n      onChange: e => setIdentifiant(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }, this), \"Mot de passe \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"formInput\",\n      value: motDePasse,\n      onChange: e => setMotDePasse(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Retour\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), messageErreur && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: messageErreur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(FormLogin, \"dsNSLntemD3ecJ91+ZQbBWyJV7s=\");\n_c = FormLogin;\nexport default FormLogin;\nvar _c;\n$RefreshReg$(_c, \"FormLogin\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FormLogin","_s","utilisateurs","login","mdp","identifiant","setIdentifiant","motDePasse","setMotDePasse","messageErreur","setMessageErreur","handleSubmit","event","preventDefault","utilisateurTrouve","find","utilisateur","className","onSubmit","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jules/Documents/Stage/Projet Quidditch/Quidditch/client/src/components/FormLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst FormLogin = () => {\r\n    const utilisateurs = [{\r\n        login: \"Shrek\",\r\n        mdp: \"ratio\"\r\n    }];\r\n    const [identifiant, setIdentifiant] = useState('');\r\n    const [motDePasse, setMotDePasse] = useState('');\r\n    const [messageErreur, setMessageErreur] = useState('');\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const utilisateurTrouve = utilisateurs.find(utilisateur => utilisateur.login === identifiant && utilisateur.mdp === motDePasse);\r\n        if (utilisateurTrouve) {\r\n            setMessageErreur('');\r\n        } else {\r\n            setMessageErreur('Identifiant ou mot de passe incorrect.');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className='authentification' onSubmit={handleSubmit}>\r\n            Identifiant <input type=\"text\" className='formInput' value={identifiant} onChange={(e) => setIdentifiant(e.target.value)} />\r\n            Mot de passe <input type=\"password\" className='formInput' value={motDePasse} onChange={(e) => setMotDePasse(e.target.value)} />\r\n            <input type=\"submit\" value=\"Login\" />\r\n            <input type=\"button\" value=\"Retour\" />\r\n            {messageErreur && <p>{messageErreur}</p>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default FormLogin;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,YAAY,GAAG,CAAC;IAClBC,KAAK,EAAE,OAAO;IACdC,GAAG,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMc,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,iBAAiB,GAAGZ,YAAY,CAACa,IAAI,CAACC,WAAW,IAAIA,WAAW,CAACb,KAAK,KAAKE,WAAW,IAAIW,WAAW,CAACZ,GAAG,KAAKG,UAAU,CAAC;IAC/H,IAAIO,iBAAiB,EAAE;MACnBJ,gBAAgB,CAAC,EAAE,CAAC;IACxB,CAAC,MAAM;MACHA,gBAAgB,CAAC,wCAAwC,CAAC;IAC9D;EACJ,CAAC;EAED,oBACIX,OAAA;IAAMkB,SAAS,EAAC,kBAAkB;IAACC,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,GAAC,cAC3C,eAAApB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACH,SAAS,EAAC,WAAW;MAACI,KAAK,EAAEhB,WAAY;MAACiB,QAAQ,EAAGC,CAAC,IAAKjB,cAAc,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,iBAC/G,eAAA7B,OAAA;MAAOqB,IAAI,EAAC,UAAU;MAACH,SAAS,EAAC,WAAW;MAACI,KAAK,EAAEd,UAAW;MAACe,QAAQ,EAAGC,CAAC,IAAKf,aAAa,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC/H7B,OAAA;MAAOqB,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAC;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACrC7B,OAAA;MAAOqB,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAC;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EACrCnB,aAAa,iBAAIV,OAAA;MAAAoB,QAAA,EAAIV;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrC;AAEf,CAAC;AAAC3B,EAAA,CA5BID,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}